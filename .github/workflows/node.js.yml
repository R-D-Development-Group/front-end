# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
#                      [20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: ${{ secrets.DOCKER_USERNAME }}/rd_dev_frontend
        tags: latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Configure Docker to use Google Artifact Registry
      run: gcloud auth configure-docker europe-west1-docker.pkg.dev

    - name: Push Docker image to Google Artifact Registry
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rd_dev_frontend:latest europe-west1-docker.pkg.dev/devopsrd/rd-frontend-docker-repo/docker-gcloud-image:latest
        docker push europe-west1-docker.pkg.dev/devopsrd/rd-frontend-docker-repo/docker-gcloud-image:latest

#    - name: Deploy to Cloud Run (IDK how much money this will cost so commented out for now)
#      run: |
#        gcloud run deploy my-app \
#          --image=europe-west1-docker.pkg.dev/devopsrd/rd-frontend-docker-repo/docker-gcloud-image:latest \
#          --region=europe-west1 \
#          --platform=managed \
#          --allow-unauthenticated
